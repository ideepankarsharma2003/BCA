//************
//************name 						-------- 	Tarun Joshi
//************course						------- BCA 'C'
//************roll no						-------20041199					
//************date of practical 				------- 10/09/2021
//************1 . objective 					------					Write a program in “C” Language to find out the root of the Algebraic and
//																		Transcendental equations using Bisection Method.
//----------------------------------------------------------------------------------------------------------------------------------------------------------
//************														2. Method / Algorithm
//----------------------------------------------------------------------------------------------------------------------------------------------------------
//************			1 .Start
//************			2 .Read x1, x2, e
//*************			*Here x1 and x2 are initial guesses
//************			aerr is the absolute error i.e. the desired degree of accuracy*
//************			3 .Compute: f1 = f(x1) and f2 = f(x2)
//************			4 .If (f1*f2) > 0, then display initial guesses are wrong and goto (11).
//************			Otherwise continue.		
//************			5 .x = (x1 + x2)/2
//************          6 .If ( [ (x1 – x2)/x ] < e ), then display x and goto (11).
//************			* Here [ ] refers to the modulus sign. *
//************			7 .Else, f = f(x)
//************			8 .If ((f*f1) > 0), then x1 = x and f1 = f.
//************			9 .Else, x2 = x and f2 = f.
//************			10 .Goto (5).
//************			*Now the loop continues with new values.*
//************			11 .Stop
//----------------------------------------------------------------------------------------------------------------------------------------------------------
													//************3. PROGRAM OF Bijection method
//--------------------------------------------------------------------------------------------------------------------------------------------------------
#include<stdio.h>
#include<math.h>
#define ep 0.001
float f(float x)
{
	return (pow(x,3)-4*x-9);
}
int main()
{
						// tarun joshi bca student 
	float a,b,x,aerr;
	int itr=0,flag=0;
	do
	{
		printf("enter the two roots\n");
		scanf("%f%f",&a,&b);
}
while(f(a)*f(b)>0);
printf("\nthe roots lies between %f%f",a,b);
printf("enter the allowed error\n");
scanf("%f",&aerr);
do
{
	itr++;
	x=a+b/2;
	printf("/nitteration value of x is %f,value of f(x) is %f",itr,x,f(x));
	if(fabs(f(x))<=aerr)
	{
							// tarun joshi bca student 
		printf("\n the roots of the equation is %f afte %d itteration",x,itr);
		flag=1;
	}
	else if(f(a)*f(x)<0)
	b=x;
	else
	a=x;
}
while(flag==0);
}
//-------------------------------------------------------------------------------------------------------------------------------------------------------
//************										 OUTPUT





******************************************************************************************************************************************************
											2 

******************************************************************************************************************************************************

//************
//************name 						-------- 	Tarun Joshi
//************course						------- BCA 'C'
//************roll no						-------20041199					
//************date of practical 				------- 07/09/2021
//************1 . objective 					------find the roots , regualr false method  , to make convergence faster...
//----------------------------------------------------------------------------------------------------------------------------------------------------------
//************														2. Method / Algorithm
//----------------------------------------------------------------------------------------------------------------------------------------------------------
//************			1 .Start
//************			2 .Read values of x0, x1 and aerr
//*************			Here x0 and x1 are the two initial guesses
//************			aerr is the degree of accuracy or the absolute error 
//************			i.e. the stopping criteria*
//************			3 .Computer function values f(x0) and f(x1)
//************			4 .Check whether the product of f(x0) and f(x1) is negative or not.
//************			If it is positive take another initial guesses.
//************			If it is negative then goto step 5.
//************			5 .Determine:
//************          6 .Check whether the product of f(x1) and f(x) is negative or not.
//************			If it is negative, then assign x0 = x;
//************			If it is positive, assign x1 = x;
//************			7 .Check whether the value of f(x) is greater than 0.0001 or not.
//************			If yes, goto step 5.
//************			If no, goto step 8.
//************			*Here the value 0.0001 is the desired degree of accuracy, and hence the stopping criteria.*
//************			8 .Display the root as x.
//************			9 .Stop

//----------------------------------------------------------------------------------------------------------------------------------------------------------
													//************3. PROGRAM OF regular false mehtod
//--------------------------------------------------------------------------------------------------------------------------------------------------------

#include<stdio.h>
#include<math.h>
float f(float x)
{
	return(exp(-x)-sin(x));
}
int main()
{
	float x0,x1,x,aerr;
	int itr=0,flag=0;
	do
	{
		printf("\nEnter the two values of x");
		scanf("%f%f",&x0,&x1);
		if(f(x0)*f(x1)<0)
		{
			printf("\nThe root lies between %.2f and %.2f",x0,x1);
			flag=1;
		}
		else
			printf("\n Wrong intervals!!\n Enter Again..");
	}while(flag==0);
	printf("\nEnter the allowed error");
	scanf("%f",&aerr);
	do
	{
		itr++;
		x=(x0*f(x1)-x1*f(x0))/(f(x1)-f(x0));
		printf("\n%d iteration, Value of X is %f, Value of f(X) is %f",itr,x,f(x));
		if(fabs(f(x))<=aerr)
		{
			printf("\nThe root of the equation is %f, after %d Iteration",x,itr);
			flag=0;
		}
		else if(f(x0)*f(x)<0)
			x1=x;
		else
			x0=x;
	}while(flag==1);
}   

//************													OUTPUT



//************		Enter the two values of x0
//************		1

//************The root lies between 0.00 and 1.00
//************	Enter the allowed error0.001

//************		1 iteration, Value of X is 0.678614, Value of f(X) is -0.120395
//************		2 iteration, Value of X is 0.605692, Value of f(X) is -0.023634
//************		3 iteration, Value of X is 0.591707, Value of f(X) is -0.004397
//************		4 iteration, Value of X is 0.589117, Value of f(X) is -0.000810
//************		The root of the equation is 0.589117, after 4 Iteration
//************		Process exited after 6.096 seconds with return value 0
//************		Press any key to continue . . .


******************************************************************************************************************************************************
										3

******************************************************************************************************************************************************





//************name 						-------- 	Tarun Joshi
//************course						------- BCA 'C'
//************roll no						-------20041199					
//************date of practical 				------- 07/09/2021
//************1 . objective 					------find the roots , Write a program in “C” Language to deduce error involved in polynomial equation .
//----------------------------------------------------------------------------------------------------------------------------------------------------------
//************														2. Method / Algorithm
//----------------------------------------------------------------------------------------------------------------------------------------------------------
//************Algorithm:
//************Step-2. Input the variable tv, av.
//************Step-3. Calculate absolute error ea
//************ea=fabs(tv-av)
//************Step-4. Calculate relative error er
//************er=ea/tv
//************Step-5. Calculate percentage relative error ep
//************ep=er*100
//************Step-6. PRINT ea,er,ep,aerr
//************Step-7. STOP

//----------------------------------------------------------------------------------------------------------------------------------------------------------
													//************3. PROGRAM OF ERROR Mehtod
//--------------------------------------------------------------------------------------------------------------------------------------------------------
#include<stdio.h>
#include<math.h>
int main()
{
	float tv,av;
	float ea,er,ep;
	printf("enter the value of tv");
	scanf("%f",&tv);
	printf("enter the value of av");
	scanf("%f",&av);

ea=fabs(tv-av);
er=ea/tv;
ep=er*100;
printf("absolute error value is=%f",ea);
printf("relative error value is=%f",er);
printf("percentage error value is=%f",ep);
return 0;
}

//************											4. output  					


//enter the value of tv7.893
//enter the value of av7.104
//absolute error vlue is=0.789000relative error vlue is=0.099962percentage error 
//value is=9.996200
//Process exited after 11.27 seconds with return value 0
//Press any key to continue . . .



